name: Check if python, modules and venv available to run flow-migrate scripts.


on:
 # Run only on manuual trigger
 workflow_dispatch:


# Variables defined
env:
  conda_env: "nifi_reg_py_env"
  pip_modules: "nipyapi pip_search jproperties"
  repo: "subin-telus/nifi-registry-migrate-code-test"


jobs:

  checkout_repo:
    runs-on: self-hosted
    steps:

      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          repository: ${{ env.repo }}
          token: ${{ secrets.TOKEN }}

  conda_installation_check:
    runs-on: self-hosted
    needs: [checkout_repo]
    steps:
    
      - name: Get conda version
        shell: bash
        run: |
          conda --version 1> temp.txt 2>> temp.txt
        continue-on-error: true

      - name: Check conda version
        shell: bash
        id: check-conda-version
        run: |
          conda_ver=$(head temp.txt)
          rm -rf temp.txt
          not_found="command not found"
          if [[ "$conda_ver" =~ .*"$not_found".* ]]; then
            value="no_conda"
          else
            value="yes_conda"
          fi
          echo "::set-output name=ver_value::$value"
          echo "::set-output name=no_conda::no_conda"

      - name: Install Anaconda
        if: ${{ steps.check-conda-version.outputs.ver_value == steps.check-conda-version.outputs.no_conda }}
        shell: bash
        run: |
          echo -e "\nInstalling Conda\n"
          sh anaconda_installer.sh

  Connect_to_venv:
    runs-on: self-hosted
    needs: [conda_installation_check]
    steps:

      - name: Connect to venv
        id: connect-venv
        shell: bash
        run: |
          eval "$(command conda 'shell.bash' 'hook' 2> /dev/null)"
          conda init bash
          conda activate ${{ env.conda_env }}
          def_env=$(echo $CONDA_DEFAULT_ENV)
          echo "::set-output name=default_env::$def_env"

      - name: Check if connected to venv
        if: ${{ steps.connect-venv.outputs.default_env != env.conda_env }}
        shell: bash
        run: |
          echo "::error::Unable to activate conda venv - ${{ env.conda_env }}"
          echo -e "\nRe-installing Conda\n"
          sh anaconda_installer.sh

  python_modules_install:
    runs-on: self-hosted
    needs: [Connect_to_venv]
    steps:
    
      - name: Install Python packages
        shell: bash
        run: |
          pip install ${{ env.pip_modules }}
